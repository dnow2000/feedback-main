version: '3.2'

services:
  api-serve-development:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: >
      bash -c "set -x;
               cd /opt/api;
               while true; do python app.py; done;"
    container_name: ${APP_NAME}-api-serve-development
    depends_on:
      - apidb-serve-development
      - apitasksdb-serve-development
      - apiworker-serve-development
    env_file: .env
    environment:
      - ENV=${ENV:-development}
      - MODE=serve-development
      - POSTGRES_URL=postgresql://${APP_NAME}_user:${APP_NAME}_password@apidb-serve-development/${APP_NAME}_api
      - REDIS_URL=redis://apitasksdb-serve-development:6379/0
      - SCREEN_SHOT_MACHINE_KEY=$SCREEN_SHOT_MACHINE_KEY
      - TLD=$TLD
    image: &api ${APP_NAME}-api-serve-development
    networks:
      - db_serve-development_nw
      - web_serve-development_nw
    volumes:
      - ./api:/opt/api

  apidb-serve-development:
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    container_name: ${APP_NAME}-apidb-serve-development
    environment:
      - POSTGRES_DB=${APP_NAME}_api
      - POSTGRES_PASSWORD=${APP_NAME}_password
      - POSTGRES_USER=${APP_NAME}_user
    image: postgres:12.2
    networks:
      - db_serve-development_nw
    volumes:
      - "./docker_data_serve-development/apidb:/var/lib/postgresql"

  apiflower-serve-development:
    image: mher/flower:0.9.5
    depends_on:
      - apitasksdb-serve-development
    environment:
      - CELERY_BROKER_URL=redis://apitasksdb-serve-development:6379/0
      - FLOWER_PORT=8888
    networks:
      - tasksdb_serve-development_nw
    ports:
      - 8888:8888

  apitasksdb-serve-development:
    container_name: ${APP_NAME}-apitasksdb-serve-development
    environment:
      - MODE=serve-development
    image: redis:6.0.8
    networks:
      - tasksdb_serve-development_nw
    ports:
      - 6379
    volumes:
      - ./docker_data_serve-development/apitasksdb:/var/lib/redis/data

  apischeduler-serve-development:
    command: >
      bash -c "set -x;
              cd /opt/api;
              watchmedo auto-restart --directory=./ \
                                     --pattern=*.py \
                                     --recursive \
                                     -- \
              celery --app=tasks beat \
                     --loglevel=INFO;"
    container_name: ${APP_NAME}-apischeduler-serve-development
    depends_on:
      - apiworker-serve-development
    env_file: .env
    image: *api
    networks:
      - tasksdb_serve-development_nw
    volumes:
      - ./api:/opt/api

  apiworker-serve-development:
    command: >
      bash -c "set -x;
              cd /opt/api;
              watchmedo auto-restart --directory=./tasks \
                                     --pattern=*.py \
                                     --recursive \
                                     -- \
              celery --app=tasks worker \
                     --concurrency=1 \
                     --gid=nogroup \
                     --loglevel=INFO \
                     -Q default \
                     --uid=nobody;"
    container_name: ${APP_NAME}-apiworker-serve-development
    depends_on:
      - apidb-serve-development
      - apitasksdb-serve-development
    env_file: .env
    environment:
      - IS_WORKER=true
      - POSTGRES_URL=postgresql://${APP_NAME}_user:${APP_NAME}_password@apidb-serve-development/${APP_NAME}_api
      - REDIS_URL=redis://apitasksdb-serve-development:6379/0
    image: *api
    networks:
      - tasksdb_serve-development_nw
    volumes:
      - ./api:/opt/api

  nginx-serve-development:
    build:
      args:
        - MODE=serve-development
      context: ./nginx
      dockerfile: ./Dockerfile.nossl
    container_name: ${APP_NAME}-nginx-serve-development
    depends_on:
      - api-serve-development
    networks:
      - web_serve-development_nw
    ports:
      - 80:80

networks:
  db_serve-development_nw:
    driver: bridge
  tasksdb_serve-development_nw:
    driver: bridge
  web_serve-development_nw:
    driver: bridge

volumes:
  docker_data_serve-development:
