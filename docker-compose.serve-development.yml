version: '3.2'

services:
  api-serve-development:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: >
      bash -c "set -x;
               cd /opt/api;
               while true; do python app.py; done;"
    container_name: ${APP_NAME}-api-serve-development
    depends_on:
      - apidb-serve-development
      - apijobs-serve-development
      - apiworker-serve-development
    env_file:
      - ./.env
    environment:
      - ENV=${ENV:-development}
      - MODE=serve-development
      - POSTGRES_URL=postgresql://${APP_NAME}_user:${APP_NAME}_password@apidb-serve-development/${APP_NAME}_api
      - SCREEN_SHOT_MACHINE_KEY=$SCREEN_SHOT_MACHINE_KEY
      - TLD=$TLD
    image: &img api
    networks:
      - db_serve-development_nw
      - jobs_serve-develoment_nw
      - web_serve-development_nw
    volumes:
      - ./api:/opt/api

  apidb-serve-development:
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    container_name: ${APP_NAME}-apidb-serve-development
    environment:
      - POSTGRES_DB=${APP_NAME}_api
      - POSTGRES_PASSWORD=${APP_NAME}_password
      - POSTGRES_USER=${APP_NAME}_user
    image: postgres:12.2
    networks:
      - db_serve-development_nw
    volumes:
      - "./docker_data_serve-development/apidb:/var/lib/postgresql"

  nginx-serve-development:
    build:
      args:
        - MODE=serve-development
      context: ./nginx
      dockerfile: ./Dockerfile.nossl
    container_name: ${APP_NAME}-nginx-serve-development
    depends_on:
      - api-serve-development
    networks:
      - web_serve-development_nw
    ports:
      - 80:80

  apijobs-serve-development:
    container_name: ${APP_NAME}-apijobs-serve-development
    environment:
      - MODE=serve-development
    image: redis:6.0.8
    networks:
      - jobs_serve-develoment_nw
    ports:
      - 6379
    volumes:
      - ./docker_data_serve-development/redis:/var/lib/redis/data

  apiworker-serve-development:
    command: >
      bash -c "set -x;
              cd /opt/api;
              celery --app=celery_worker worker \
                     --loglevel=DEBUG \
                     --uid=nobody \
                     --gid=nogroup;"
    container_name: ${APP_NAME}-apiworker-serve-development
    depends_on:
      - apidb-serve-development
      - apijobs-serve-development
    env_file:
      - ./.env
    image: *img
    networks:
      - jobs_serve-develoment_nw
    volumes:
      - ./api:/opt/api

networks:
  db_serve-development_nw:
    driver: bridge
  jobs_serve-develoment_nw:
    driver: bridge
  web_serve-development_nw:
    driver: bridge

volumes:
  docker_data_serve-development:
